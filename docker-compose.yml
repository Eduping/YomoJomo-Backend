services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    volumes:
      - ./app:/app
    command: >
      sh -c "
      alembic upgrade head &&
      uvicorn main:app --host 0.0.0.0 --port 8000"
    env_file:
      - .env
  db:
    image: mysql:8.0
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network
  redis:
    image: redis:6.0
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery
    volumes:
      - ./app:/app
    command: >
      sh -c "
      celery -A celery_config.celery_app worker --loglevel=info --concurrency=10"
    env_file:
      - .env
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flower
    volumes:
      - ./app:/app
    command: >
      celery -A celery_config.celery_app flower --port=5555 --broker=$CELERY_BROKER_URL
    env_file:
      - .env
    ports:
      - "5555:5555"
    networks:
      - app_network
    depends_on:
      redis:
        condition: service_healthy
networks:
  app_network:
    driver: bridge
volumes:
  db_data:
